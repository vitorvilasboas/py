<TargetRun>:
    on_pre_enter: self.wt = root.session.control.warning_threshold / 100.0 # if root.session.control.flag else (80.0/100.0)
    game: game
    BoxLayout:
        orientation: 'vertical'
        spacing: 10
        padding: 20
        BoxLayout:
            orientation: 'horizontal'
            spacing: 30
            padding: 20
            BoxLayout:
                size_hint_x: 0.1
                canvas:
                    Color:
                        rgba: 1,1,0,1
                    Line:
                        width: 2
                        points:
                            (0, self.pos[1] + self.size[1] * root.wt, \
                            self.size[0]/2, self.pos[1] + self.size[1]*root.wt)
                Bar:
                    orientation: 'bt'
                    color: root.accum_color_left
                    animated: False
                    value: root.
                    value: root.accum_prob_left
                Bar:
                    orientation: 'bt'
                    color: [0,1,0,0.7]
                    animated: False
                    value: root.inst_prob_left
            RelativeLayout:
                size_hint_x: 0.8
                Game:
                    id: game
            BoxLayout:
                size_hint_x: 0.1
                canvas:
                    Color:
                        rgba: 1,1,0,1
                    Line:
                        width: 2
                        points:
                            (self.size[0]/2 + self.pos[0], self.pos[1] + self.size[1]*root.wt, \
                            root.size[0], self.pos[1] + self.size[1]*root.wt)
                Bar:
                    orientation: 'bt'
                    color: [0,1,0,.7]
                    animated: False
                    value: root.inst_prob_right
                Bar:
                    orientation: 'bt'
                    color: root.accum_color_right
                    animated: False
                    value: root.accum_prob_right
        BoxLayout:
            orientation: 'horizontal'
            size_hint: (1, 0.2)
            spacing: 10
            BoxLayout:
                orientation: 'vertical'
                size_hint: (0.3, 1)
                Button:
                    text: root.label_on_toggle_button
                    on_press: root.toogle_stream()
                    size_hint: None,None
                    size: 200,50
                Button:
                    text: 'Back'
                    on_press: root.back_to_control_menu()
                    size_hint: None,None
                    size: 200,50
            BoxLayout:
                size_hint: (0.7, 1)
                Label:
                    text: 'Current Label: ' + str(root.current_label)
<Game>:
    player: game_player
    target: game_target
    canvas:
        Color:
            rgba: (.1, .1, .1, 1)
        Rectangle:
            pos: self.pos
            size: self.size
    GamePlayer:
        id: game_player
        size_hint: (None, None)
    GameTarget:
        id: game_target
        size_hint: (None, None)
<GamePlayer>:
    size_hint: (None, None)
    size: (30,30)
    canvas:
        Color:
            rgba: (1, 1, 1, 1)
        Triangle:
            points: self.points
<GameTarget>:
    size_hint: (None, None)
    size: (50,50)
    canvas:
        Color:
            rgba: root.t_color
        Rectangle:
            pos: root.pos
            size: self.size
<GameResultsPopup>:
    size_hint: None, None
    size: 300, 250
    title: 'Game Results'
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            Label:
                text: 'Hits:'
            Label:
                text: str(root.hits)
        BoxLayout:
            Label:
                text: 'Average Time (s):'
            Label:
                text: str(round(sum(root.res) / float(len(root.res)),3))
        BoxLayout:
            Label:
                text: 'Max Time to target:'
            Label:
                text: str(round(max(root.res),3))
        BoxLayout:
            Label:
                text: 'Min Time to target:'
            Label:
                text: str(round(min(root.res),3))
        BoxLayout:
            TextInput:
                id: save_name
                hint_text: 'save as'
        BoxLayout:
            orientation: 'horizontal'
            Button:
                text: 'Save Results'
                on_press: root.save_results(save_name.text)